一：为什么要做接口测试？
	
	因为目前互联网的开发模式都是基于前后端分离的系统，
	后端的系统对外暴露接口极有可能被不法人员进行攻击。
	因此要对接口的安全性和完整性进行测试。
	

	安全性：
		sql注入


二：
	比如中央气象台对我们暴露的接口：
		中央气象台：http://flash.weather.com.cn/wmaps/xml/china.xml
	接口的应用场景：
		1.系统与系统之间的访问。
			中央气象台与腾讯官网。
		2.前后端分离模式的前端系统与后端系统的接口访问。
			系统内部使用。
	接口数据传输：
		1.xml   : 可扩展性标记语言      5.6kb
			<person>
				<username>jason</username>
				<password>admin</password>
			</person>
		2.json  : 轻量级数据传输格式   2.3kb
			{username:jason,password:admin}

	2.使用jmeter对中央气象台的接口做个测试
		2.1使用jmeter循环访问中央气象台
		2.2sql注入
任务1：
	写一份全国的天气接口说明书
	省会。
三：
	分析http协议到底传了哪些东西给服务器？
	抓包工具？
		fiddler ，charles,谷歌浏览器自带浏览器
		http：
			请求：
				请求行
				请求头
				请求空行
				请求体
			响应：
				响应行
				响应头
				响应空行
				响应体
				
				响应状态码：
					1xx：请求正在处理中。
					200：响应成功
					3xx：重定向
						302，304，301
					4xx: 浏览器的问题
						404 页面没找到
						403 禁止访问
						401
						415
					5xx：服务器的问题
						505
					501
		fiddler面试相关？
			1.fiddler抓包原理？
				就相当于网络请求中的请求代理器？
			2.fiddler怎么模拟弱网？
				fiddler ---> rules  ---> 自定义规则
					if (m_SimulateModem) {
					    // Delay sends by 300ms per KB uploaded.
					    oSession["request-trickle-delay"] = "17000"; 
					    // Delay receives by 150ms per KB downloaded.
					    oSession["response-trickle-delay"] = "16000"; 
					}
				结合clumsy模拟丢包！
			3.fiddler打断点？
				rules --> automatic breakpoint -->  before requests,after response
		2.jmeter的参数化？
			csv data set config
			任务1：
				使用JDBC数据库来参数化？
		3.jmeter的关联？
			下一步的操作需要上一步的返回数据中某个数据才能进行，下一步与上一步就会产生关联。
			正则表达式提取器：
				(.+?):
				.:任意字符
				+: 一个或者多个
				?: 匹配则结束
				()：表示的匹配成功的一组数据。
				* ：0个或者多个
				\d(数字) \D  \w(字符)  \W(非字符)
				(.+?)
					(.+?)
				$1$ : 
				0:随机
				2:精确取数据。
		1.badboy：录制脚本？
任务1：jmeter录制一份HKR系统脚本。修改的头像的脚本。
		做个修改头像的参数化。
		做参数化，和关联。
		要在不同的用户之间操作。
任务2：使用jmeter自己录制脚本！
		
		4.你都是基于什么角度来设计的接口用例？
			边界值，错误探测法，因果图，场景法来设计的接口用例。

		5.你们有接口说明书？
			1.有的情况，我们就直接根据接口说明书结合测试方法来设计用例。
			2.没有，我们就通过抓包工具来分析请求头，请求参数，并自己书写一份
				接口说明书！

		6.你负责哪些模块？ 测试多少接口？写了多少用例？
			2个模块 * 15个接口  * 10条用例 = 1000个用例。
		7.接口的测试周期？
			1周左右

四：接口自动化框架如何开发？
	
	回顾功能自动化框架：
		1.测试数据准备模块
		2.页面逻辑操作模块（请求接口）
		3.用例执行模块
	回答：我们这系统分为核心模块和非核心模块，采用的是jmeter单步测试和接口自动化测试做的。
		自动化框架包含这几个模块：
			1.测试数据准备模块
			2.模拟接口请求发送的封装模块
			3.用例的执行模块
			4.入口和生成测试报告的模块
			5.邮件发送测试报告模块

	1.核心模块（jmeter：30%的模块用jmeter来测） + 非核心模块（python接口自动化跑一边即可:70%的模块，毕竟不是核心模块）
	2.针对于能力较弱，你就全部使用jmeter来进行接口测试就可以了。

	1.接口：面试官：那你这接口自动化框架是怎么一个框架呢？
	
		自动化框架操作：
		1.测试数据准备模块
		2.requests模拟接口请求
		3.用例执行模块

		import requests                              # import selenium

		response = requests.post(url,data)           # driver.find().send_keys(usernmae)
		
		code = response.status_code                  # result = driver.title
		
		text = response.text                         # 获取实际结果
		 
		self.assertEquals(code,200)                  # 做断言
		
	
	3.接口响应标准时间？
		20~30ms,因为这里面不包含前端页面的渲染时间，因此
		必须要非常快速的响应数据。

	4.接口的安全性的保障？
		http + ack +  token:保障安全性：
		https +  ack + token : 


















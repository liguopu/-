性能的定义：
1、从客户的角度：快就是性能好，不关心系统当前的运行状态——即使系统正在处理成千上万的请求，只关心自己的能否响应。
2、运维人员的角度：关注服务的资源使用情况，系统的扩展性、系统的稳定性，以及系统可能出现的瓶颈和出现的异常情况。
3、开发人员的角度：软件系统架构设计的合理性，数据库设计的合理性，不存在不合理的资源竞争。
4、测试人员：系统质量的把关者，为后续分析和定位性能问题、优化性能问题提供解决方案。

性能测试的步骤：
前期：
第一步：
1、确定测试的范围：测试多少个接口、这些接口实现的功能
第二步：
1、确定交易：测试的范围
	1）用户使用最频繁的
	2）系统中的核心功能
	3）需求中明确规定的
	4）选择路径最长的
2、确定指标：性能测试通过的准则或者说是性能测试的结束依据
	1）服务器的资源使用率（cpu、磁盘、内存）
	2）平均响应时间：单位时间内从客户端发送请求到服务器响应花费的时间
	3）tps：（transaction per seconds）事务吞吐量，每秒钟系统处理的事务数或者交易数量，性能测试中最关注的一个指标
	4）qps：
	5）hps：
	6）bps：
	7）吞吐量：
		网络吞吐量：
		事务吞吐量：tps
	8）成功率：99.9999%
	9）错误率：
3、确定场景：
	1）单交易基准场景：一个用户跑一个交易，5-10min。目的：验证单支交易在无压力情况下系统有没有性能问题
	2）单交易负载场景：多个用户跑一个交易，10-15min。目的：验证单支交易的最大处理能力。
		a）同步并发
		b）递增式并发
	3）混合测试场景：多个用户跑多个交易，15-30min。目的：验证整个系统的处理能力。
	4）稳定性测试场景：选择混合测试场景最大压力的80%执行4h或者12h。目的：验证长时间运行系统的性能稳定性。
4、确定环境：尽量模拟线上使用环境
	1）服务端的环境：操作系统、硬件配置、软件配置
	2）客户端环境：操作系统、测试工具
第三步：编写测试用例：（预置条件、测试步骤、预期结果、实际结果）
第四步：准备数据和脚本
	1、测试数据的准备：mysql、excel
	2、测试脚本的准备：参考接口测试的脚本
中期：
	执行前期设计的脚本或者用例（关联、参数化、增加断言、查看结果树）
后期：
	收集结果，分析问题，提交bug，回归测试
